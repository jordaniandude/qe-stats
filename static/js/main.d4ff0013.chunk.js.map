{"version":3,"sources":["components/OverallCoverage.js","utils/index.js","components/ProgressCoverage.js","components/Profile.js","components/TotalCoverage.js","components/App.js","index.js","assets/my-pic.jpg"],"names":["options","indexAxis","elements","bar","borderWidth","responsive","maintainAspectRatio","plugins","legend","display","title","text","OverallCoverage","stats","sce","cs","trends","utt","mm","Object","keys","forEach","app","Math","ceil","Number","automated","total","data","labels","datasets","backgroundColor","borderColor","className","api","axios","create","baseURL","headers","months","getMonths","labelsArray","now","Date","count","monthName","getMonth","unshift","setMonth","scales","yAxes","ticks","beginAtZero","position","ProgressCoverage","state","get","res","this","setState","console","log","prepareData","dataArray","map","entry","month","length","sceData","csData","trendsData","uttData","mmData","date","c","currentMonth","label","fill","React","Component","Profile","src","profilePicture","alt","style","marginLeft","margin","float","rel","href","target","TotalCoverage","totalTests","totalAutomated","automatedCoverage","App","aria-label","role","ReactDOM","render","basename","process","exact","path","component","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d4ff0013.chunk.js","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst options = {\n  indexAxis: \"y\",\n  elements: {\n    bar: {\n      borderWidth: 2,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false,\n    },\n    title: {\n      display: true,\n      text: \"Overall Test Coverage % / Per Application\",\n    },\n  },\n};\n\nconst OverallCoverage = ({ stats }) => {\n  let sce = 0,\n    cs = 0,\n    trends = 0,\n    utt = 0,\n    mm = 0;\n\n  Object.keys(stats).forEach((app) => {\n    switch (app) {\n      case \"sce\":\n        sce = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      case \"cs\":\n        cs = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      case \"trends\":\n        trends = Math.ceil(\n          Number(stats[app].automated / stats[app].total) * 100\n        );\n        break;\n      case \"utt\":\n        utt = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      case \"mm\":\n        mm = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      default:\n        break;\n    }\n  });\n\n  const data = {\n    labels: [\n      \"Semantic Core Editor\",\n      \"Curation Studio\",\n      \"Trends UI\",\n      \"Topic Navigator\",\n      \"Moment Maker V3\",\n    ],\n    datasets: [\n      {\n        data: [sce, cs, trends, utt, mm, 100],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"center\">\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nexport default OverallCoverage;\n","import axios from 'axios';\n\nconst serverUrl = 'https://qe-stats.herokuapp.com'\n\nexport const api = axios.create({\n  baseURL: `${serverUrl}/api`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { api } from \"../utils\";\n\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nconst getMonths = () => {\n  let labelsArray = [];\n  var now = new Date();\n  let count = 6;\n  while (count-- > 0) {\n    const monthName = months[now.getMonth()];\n    labelsArray.unshift(monthName);\n    now.setMonth(now.getMonth() - 1);\n  }\n  return labelsArray;\n};\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"# of Tests Over Time / Per Application\",\n    },\n  },\n};\n\nclass ProgressCoverage extends React.Component {\n  constructor() {\n    super();\n    this.state = { stats: {}, data: {} }; \n  }\n\n  async componentDidMount() {\n    const { data: res } = await api.get(\"/stats\");\n    this.setState({ stats: res });\n    console.log(\"Getting all Stats from server: \", this.state);\n    await this.prepareData();\n  }\n  async prepareData() {\n    let dataArray = this.state.stats;\n    \n    // Build map of entries\n    let map = {};\n    console.log(dataArray);\n    dataArray.forEach((entry) => {\n      let month = new Date(entry[\"date\"]).getMonth();\n      console.log(month);\n      if (Object.keys(map).length === 6) {\n        return;\n      }\n      if (!map[month]) {\n        // if map doesn't have this month, add it\n        map[month] = entry;\n      }\n    });\n\n    // Build individual app data arrays.\n    let sceData = [],\n      csData = [],\n      trendsData = [],\n      uttData = [],\n      mmData = [];\n    var date = new Date();\n    let c = 6;\n    console.log(map)\n    while (c-- > 0) {\n      let currentMonth = date.getMonth();\n      sceData.unshift(map[currentMonth].data.sce.total);\n      csData.unshift(map[currentMonth].data.cs.total);\n      trendsData.unshift(map[currentMonth].data.trends.total);\n      uttData.unshift(map[currentMonth].data.utt.total);\n      mmData.unshift(map[currentMonth].data.mm.total);\n      date.setMonth(currentMonth - 1);\n    }\n    this.setState({data: {\n      labels: getMonths(),\n      datasets: [\n        {\n          label: \"Semantic Core Editor\",\n          data: sceData,\n          fill: false,\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgba(255, 99, 132, 0.2)\",\n        },\n        {\n          label: \"Curation Studio\",\n          data: csData,\n          fill: false,\n          backgroundColor: \"rgba(54, 162, 235, 1)\",\n          borderColor: \"rgba(54, 162, 235, 0.2)\",\n        },\n        {\n          label: \"Trends UI\",\n          data: trendsData,\n          fill: false,\n          backgroundColor: \"rgba(255, 206, 86, 1)\",\n          borderColor: \"rgba(255, 206, 86, 0.2)\",\n        },\n        {\n          label: \"Topic Navigator\",\n          data: uttData,\n          fill: false,\n          backgroundColor: \"rgba(75, 192, 192, 1)\",\n          borderColor: \"rgba(75, 192, 192, 0.2)\",\n        },\n        {\n          label: \"Moment Maker V3\",\n          data: mmData,\n          fill: false,\n          backgroundColor: \"rgba(153, 102, 255, 1)\",\n          borderColor: \"rgba(153, 102, 255, 0.2)\",\n        },\n      ],\n    }});\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"center\">\n        <Line data={this.state.data} options={options} />\n      </div>\n    );\n  }\n}\n\nexport default ProgressCoverage;\n","import React from \"react\";\nimport profilePicture from \"../assets/my-pic.jpg\";\nimport \"../index.css\";\n\nconst Profile = () => {\n  return (\n    <div>\n      <div className=\"profile-container\">\n        <div>\n          <img src={profilePicture} alt=\"profile\" className=\"profile-details\" />\n        </div>\n        <div style={{ marginLeft: \"60px\" }}>\n          <p style={{ margin: 0 }}>Tariq Elouzeh</p>\n          <p style={{ float: \"left\" }}>@jordaniandude</p>\n        </div>\n      </div>\n      <div className=\"table-center\">\n        <table className=\"info\">\n          <colgroup>\n            <col className=\"gray\" />\n            <col className=\"lightgray\" />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>TestRail</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://testrail-mgmt.atlc-it.twitter.biz/testrail/index.php?/suites/view/48940\"\n                target=\"_blank\"\n              >\n                <td>Test Cases Suite</td>\n              </a>\n            </tr>\n            <tr>\n              <td>JIRA</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://jira.twitter.biz/browse/ZAP-41\"\n                target=\"_blank\"\n              >\n                <td>Automation Epic</td>\n              </a>\n            </tr>\n            <tr>\n              <td>Engineering Team</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://confluence.twitter.biz/pages/viewpage.action?pageId=127557034\"\n                target=\"_blank\"\n              >\n                <td>Curation Tooling</td>\n              </a>\n            </tr>\n            <tr>\n              <td>Bugs Found by Automation</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://jira.twitter.biz/issues/?jql=project%20in%20(Zapdos)%20AND%20labels%20in%20(webtf-automation-bug)\"\n                target=\"_blank\"\n              >\n                <td>Link to JIRA</td>\n              </a>\n            </tr>\n            <tr>\n              <td>Tests Stability Rate</td>\n              <td>99%</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: true,\n      position: \"bottom\",\n    },\n    title: {\n      display: true,\n      text: \"Total Test Coverage %\",\n    },\n  },\n};\n\nconst TotalCoverage = ({ stats }) => {\n  let totalTests = 0,\n    totalAutomated = 0;\n  Object.keys(stats).forEach((app) => {\n    totalTests += stats[app].total;\n    totalAutomated += stats[app].automated;\n  });\n  const automatedCoverage = Math.ceil(Number(totalAutomated / totalTests) * 100);\n  const data = {\n    labels: [\"Automated\", \"Not Automation\"],\n    datasets: [\n      {\n        data: [automatedCoverage, 100-automatedCoverage],\n        backgroundColor: [\"rgba(75, 192, 192, 0.2)\", \"rgba(255, 99, 132, 0.2)\"],\n        borderColor: [\"rgba(75, 192, 192, 1)\", \"rgba(255, 99, 132, 1)\"],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <div className=\"center\">\n      <Pie data={data} options={options} />\n    </div>\n  );\n};\n\nexport default TotalCoverage;\n","import React from \"react\";\nimport OverallCoverage from \"./OverallCoverage\";\nimport ProgressCoverage from \"./ProgressCoverage\";\nimport Profile from \"./Profile\";\nimport TotalCoverage from \"./TotalCoverage\";\nimport { api } from \"../utils\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {data: {}};\n  }\n  async componentDidMount() {\n    const {data: res} = await api.get(\"/stats/latest\");\n    this.setState({data: res.data});\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <h2>Curation Tooling Test Automation Stats <span aria-label=\"stats\" role=\"img\">📊</span></h2>\n        </div>\n        <div className=\"row\">\n          <div className=\"leftcolumn\">\n            <div className=\"card\">\n              <OverallCoverage stats={this.state.data} />\n            </div>\n            <div className=\"card\">\n              <ProgressCoverage />\n            </div>\n          </div>\n          <div className=\"rightcolumn\">\n            <div className=\"card\">\n              <Profile />\n            </div>\n            <div className=\"card\">\n              <TotalCoverage stats={this.state.data} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import \"./index.css\";\nimport  React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport { Fragment } from \"react\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Fragment>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n      </Switch>\n    </Fragment>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);","module.exports = __webpack_public_path__ + \"static/media/my-pic.35c911ed.jpg\";"],"sourceRoot":""}