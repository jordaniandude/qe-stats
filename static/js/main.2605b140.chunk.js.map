{"version":3,"sources":["components/OverallCoverage.js","components/ProgressCoverage.js","components/Profile.js","components/TotalCoverage.js","components/App.js","index.js","assets/my-pic.jpg"],"names":["options","indexAxis","elements","bar","borderWidth","responsive","maintainAspectRatio","plugins","legend","display","title","text","OverallCoverage","stats","sce","cs","trends","utt","mm","Object","keys","forEach","app","Math","ceil","Number","automated","total","data","labels","datasets","backgroundColor","borderColor","className","label","fill","scales","yAxes","ticks","beginAtZero","position","ProgressCoverage","state","axios","get","headers","res","this","setState","console","log","React","Component","Profile","src","profilePicture","alt","style","marginLeft","margin","float","rel","href","target","TotalCoverage","totalTests","totalAutomated","automatedCoverage","App","aria-label","role","ReactDOM","render","exact","path","component","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2605b140.chunk.js","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst options = {\n  indexAxis: \"y\",\n  elements: {\n    bar: {\n      borderWidth: 2,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false,\n    },\n    title: {\n      display: true,\n      text: \"Overall Test Coverage % / Per Application\",\n    },\n  },\n};\n\nconst OverallCoverage = ({ stats }) => {\n  let sce = 0,\n    cs = 0,\n    trends = 0,\n    utt = 0,\n    mm = 0;\n\n  Object.keys(stats).forEach((app) => {\n    switch (app) {\n      case \"sce\":\n        sce = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      case \"cs\":\n        cs = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      case \"trends\":\n        trends = Math.ceil(\n          Number(stats[app].automated / stats[app].total) * 100\n        );\n        break;\n      case \"utt\":\n        utt = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      case \"mm\":\n        mm = Math.ceil(Number(stats[app].automated / stats[app].total) * 100);\n        break;\n      default:\n        break;\n    }\n  });\n\n  const data = {\n    labels: [\n      \"Semantic Core Editor\",\n      \"Curation Studio\",\n      \"Trends UI\",\n      \"Topic Navigator\",\n      \"Moment Maker V3\",\n    ],\n    datasets: [\n      {\n        data: [sce, cs, trends, utt, mm, 100],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"center\">\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nexport default OverallCoverage;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\"],\n  datasets: [\n    {\n      label: \"Semantic Core Editor\",\n      data: [20, 22, 23, 25, 30],\n      fill: false,\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgba(255, 99, 132, 0.2)\",\n    },\n    {\n      label: \"Curation Studio\",\n      data: [60, 63, 68, 72, 77],\n      fill: false,\n      backgroundColor: \"rgba(54, 162, 235, 1)\",\n      borderColor: \"rgba(54, 162, 235, 0.2)\",\n    },\n    {\n      label: \"Trends UI\",\n      data: [20, 22, 23, 25, 30],\n      fill: false,\n      backgroundColor: \"rgba(255, 206, 86, 1)\",\n      borderColor: \"rgba(255, 206, 86, 0.2)\",\n    },\n    {\n      label: \"Topic Navigator\",\n      data: [20, 22, 23, 25, 30],\n      fill: false,\n      backgroundColor: \"rgba(75, 192, 192, 1)\",\n      borderColor: \"rgba(75, 192, 192, 0.2)\",\n    },\n    {\n      label: \"Moment Maker V3\",\n      data: [20, 22, 23, 25, 30],\n      fill: false,\n      backgroundColor: \"rgba(153, 102, 255, 1)\",\n      borderColor: \"rgba(153, 102, 255, 0.2)\",\n    },\n  ],\n};\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    title: {\n      display: true,\n      text: \"# of Tests Over Time / Per Application\",\n    },\n  },\n};\n\nclass ProgressCoverage extends React.Component {\n  constructor() {\n    super();\n    this.state = {stats: {}};\n  }\n  async componentDidMount() {\n    const {data: res} = await axios.get(\"http://localhost:3005/api/stats\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    this.setState({stats: res});\n    console.log(\"Getting all Stats from server: \",this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"center\">\n        <Line data={data} options={options} />\n      </div>\n    );\n  }\n}\n\nexport default ProgressCoverage;\n","import React from \"react\";\nimport profilePicture from \"../assets/my-pic.jpg\";\nimport \"../index.css\";\n\nconst Profile = () => {\n  return (\n    <div>\n      <div className=\"profile-container\">\n        <div>\n          <img src={profilePicture} alt=\"profile\" className=\"profile-details\" />\n        </div>\n        <div style={{ marginLeft: \"60px\" }}>\n          <p style={{ margin: 0 }}>Tariq Elouzeh</p>\n          <p style={{ float: \"left\" }}>@jordaniandude</p>\n        </div>\n      </div>\n      <div className=\"table-center\">\n        <table className=\"info\">\n          <colgroup>\n            <col className=\"gray\" />\n            <col className=\"lightgray\" />\n          </colgroup>\n          <tbody>\n            <tr>\n              <td>TestRail</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://testrail-mgmt.atlc-it.twitter.biz/testrail/index.php?/suites/view/48940\"\n                target=\"_blank\"\n              >\n                <td>Test Cases Suite</td>\n              </a>\n            </tr>\n            <tr>\n              <td>JIRA</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://jira.twitter.biz/browse/ZAP-41\"\n                target=\"_blank\"\n              >\n                <td>Automation Epic</td>\n              </a>\n            </tr>\n            <tr>\n              <td>Engineering Team</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://confluence.twitter.biz/pages/viewpage.action?pageId=127557034\"\n                target=\"_blank\"\n              >\n                <td>Curation Tooling</td>\n              </a>\n            </tr>\n            <tr>\n              <td>Bugs Found by Automation</td>\n              <a\n                rel=\"noopener noreferrer\"\n                href=\"https://jira.twitter.biz/issues/?jql=project%20in%20(Zapdos)%20AND%20labels%20in%20(webtf-automation-bug)\"\n                target=\"_blank\"\n              >\n                <td>Link to JIRA</td>\n              </a>\n            </tr>\n            <tr>\n              <td>Tests Stability Rate</td>\n              <td>99%</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: true,\n      position: \"bottom\",\n    },\n    title: {\n      display: true,\n      text: \"Total Test Coverage %\",\n    },\n  },\n};\n\nconst TotalCoverage = ({ stats }) => {\n  let totalTests = 0,\n    totalAutomated = 0;\n  Object.keys(stats).forEach((app) => {\n    totalTests += stats[app].total;\n    totalAutomated += stats[app].automated;\n  });\n  const automatedCoverage = Math.ceil(Number(totalAutomated / totalTests) * 100);\n  const data = {\n    labels: [\"Automated\", \"Not Automation\"],\n    datasets: [\n      {\n        data: [automatedCoverage, 100-automatedCoverage],\n        backgroundColor: [\"rgba(75, 192, 192, 0.2)\", \"rgba(255, 99, 132, 0.2)\"],\n        borderColor: [\"rgba(75, 192, 192, 1)\", \"rgba(255, 99, 132, 1)\"],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <div className=\"center\">\n      <Pie data={data} options={options} />\n    </div>\n  );\n};\n\nexport default TotalCoverage;\n","import React from \"react\";\nimport OverallCoverage from \"./OverallCoverage\";\nimport ProgressCoverage from \"./ProgressCoverage\";\nimport Profile from \"./Profile\";\nimport TotalCoverage from \"./TotalCoverage\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {data: {}};\n  }\n  async componentDidMount() {\n    const {data: res} = await axios.get(\"http://localhost:3005/api/stats/latest\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    this.setState({data: res.data});\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <h2>Curation Tooling Test Automation Stats <span aria-label=\"stats\" role=\"img\">📊</span></h2>\n        </div>\n        <div className=\"row\">\n          <div className=\"leftcolumn\">\n            <div className=\"card\">\n              <OverallCoverage stats={this.state.data} />\n            </div>\n            <div className=\"card\">\n              <ProgressCoverage />\n            </div>\n          </div>\n          <div className=\"rightcolumn\">\n            <div className=\"card\">\n              <Profile />\n            </div>\n            <div className=\"card\">\n              <TotalCoverage stats={this.state.data} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import \"./index.css\";\nimport  React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport { Fragment } from \"react\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Fragment>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n      </Switch>\n    </Fragment>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);","module.exports = __webpack_public_path__ + \"static/media/my-pic.35c911ed.jpg\";"],"sourceRoot":""}